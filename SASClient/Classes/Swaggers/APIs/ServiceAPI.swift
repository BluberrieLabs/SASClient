//
// ServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class ServiceAPI: APIBase {
    /**
     Confirm the user email address
     
     - parameter id: (path) user id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func confirmEmail(id: String, completion: @escaping ((_ error: Error?) -> Void)) {
        confirmEmailWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Confirm the user email address
     - GET /service/confirm/{id}
     - Redirects to the specified confirmation page
     
     - parameter id: (path) user id 

     - returns: RequestBuilder<Void> 
     */
    open class func confirmEmailWithRequestBuilder(id: String) -> RequestBuilder<Void> {
        var path = "/service/confirm/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SASClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SASClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the public JWT certificate
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getCert(completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        getCertWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get the public JWT certificate
     - GET /service/cert
     - Returns the X.509 cert used to sign JWT tokens
     - examples: [{output=none}]

     - returns: RequestBuilder<String> 
     */
    open class func getCertWithRequestBuilder() -> RequestBuilder<String> {
        let path = "/service/cert"
        let URLString = SASClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = SASClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
